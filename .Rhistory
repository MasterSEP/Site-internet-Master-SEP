install.packages("leaflet")
library(tibble)
library(tidyr)
# Visualisation de la base de données crée en utilisant la fonction tibble
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
View(new_tibble)
# Création du tibble imbriqué
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
library(dplyr)
library(purrr)
install.packages("purrr")
library(purrr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(purrr)
# Utiliser map pour ajouter 10 à chaque valeur de ventes dans chaque groupe de données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1[[2]][[1]])
# Créer un vecteur de ventes pour le nouveau produit "C"
produit_C <- c(80, 70)
# Utiliser map2 pour ajouter les ventes du nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Afficher les résultats
new_tibble1
library(ggplot2)
# Créer un diagramme en barres
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
# Créer un diagramme en barres
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
View(new_tibble1)
# Créer un vecteur de ventes pour le nouveau produit "D"
produit_D <- c(120, 170)
# Utiliser map2 pour ajouter les ventes dU nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_D, ~ bind_rows(.x, tibble(Produit = "D", Ventes = .y))))
View(new_tibble1)
View(new_tibble1[[2]][[1]])
library(tibble)
library(tidyr)
# Visualisation de la base de données crée en utilisant la fonction tibble
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
library(tibble)
library(tidyr)
# Visualisation de la base de données crée en utilisant la fonction tibble
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
# Création du tibble imbriqué
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
library(dplyr)
library(purrr)
# Utiliser map pour ajouter 10 à chaque valeur de ventes dans chaque groupe de données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1[[2]][[1]])
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1)
View(new_tibble1[[2]][[1]])
library(dplyr)
library(purrr)
# Utiliser map pour ajouter 10 à chaque valeur de ventes dans chaque groupe de données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1)
# Utiliser map2 pour ajouter les ventes du nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Créer un vecteur de ventes pour le nouveau produit "C"
produit_C <- c(80, 70)
# Utiliser map2 pour ajouter les ventes du nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Afficher les résultats
new_tibble1
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
library(ggplot2)
# Créer un diagramme en barres
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
library(ggplot2)
# Créer un diagramme en barres
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
# Créer un vecteur de ventes pour le nouveau produit "D"
produit_D <- c(120, 170)
# Utiliser map2 pour ajouter les ventes dU nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_D, ~ bind_rows(.x, tibble(Produit = "D", Ventes = .y))))
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
# Créer un diagramme en barres
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes")
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
# Créer un vecteur de ventes pour le nouveau produit "D"
produit_D <- c(120, 170)
# Utiliser map2 pour ajouter les ventes dU nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_D, ~ bind_rows(.x, tibble(Produit = "D", Ventes = .y))))
View(new_tibble1)
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
library(tibble)
library(tidyr)
library(dplyr)
library(purrr)
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
View(new_tibble)
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1)
View(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
produit_C <- c(80, 70)
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Afficher les résultats
new_tibble1
View(new_tibble1)
View(new_tibble1[[2]][[1]])
library(ggplot2)
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
library(tibble)
library(tidyr)
library(dplyr)
library(purrr)
library(tibble)
library(tidyr)
library(dplyr)
library(purrr)
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
View(new_tibble)
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes =
# Afficher les résultats
new_tibble1
# Afficher les résultats
new_tibble1
# Afficher les résultats
new_tibble1
# Afficher les résultats
new_tibble1
# Créer un vecteur de ventes pour le nouveau produit "C"
produit_C <- c(80, 70)
# Utiliser map2 pour ajouter les ventes du nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Afficher les résultats
new_tibble1
library(ggplot2)
# Créer un diagramme en barres
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
# Créer un diagramme en barres
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
print(new_tibble1)
View(new_tibble1)
ibrary(tibble)
library(tibble)
library(tidyr)
library(dplyr)
library(purrr)
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
View(new_tibble)
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
# Utiliser map pour ajouter 10 à chaque valeur de ventes dans chaque groupe de données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
# Utiliser map2 pour ajouter les ventes du nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Créer un vecteur de ventes pour le nouveau produit "C"
produit_C <- c(80, 70)
# Utiliser map2 pour ajouter les ventes du nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Utiliser map2 pour ajouter les ventes du nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Afficher les résultats
new_tibble1
View(new_tibble1)
View(new_tibble1[[2]][[1]])
library(tibble)
library(tidyr)
library(dplyr)
library(purrr)
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
View(new_tibble)
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
# Créer un vecteur de ventes pour le nouveau produit "C"
produit_C <- c(80, 70)
# Utiliser map2 pour ajouter les ventes du nouveau produit aux données nichées
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Afficher les résultats
new_tibble1
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
library(ggplot2)
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
library(tibble)
library(tidyr)
library(dplyr)
library(purrr)
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
View(new_tibble)
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1)
View(new_tibble1[[2]][[2]])
library(tibble)
library(tidyr)
library(dplyr)
library(purrr)
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
View(new_tibble)
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
produit_C <- c(80, 70)
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Afficher les résultats
new_tibble1
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
library(ggplot2)
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
library(tibble)
library(tidyr)
library(dplyr)
library(purrr)
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
View(new_tibble)
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
produit_C <- c(80, 70)
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Afficher les résultats
new_tibble1
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
library(ggplot2)
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
library(tibble)
library(tidyr)
library(dplyr)
library(purrr)
new_tibble <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80))
print(new_tibble)
View(new_tibble)
new_tibble1 <- tibble(
Region = c("Nord", "Nord", "Sud", "Sud"),
Produit = c("A", "B", "A", "B"),
Ventes = c(100, 150, 120, 80)
) %>%
nest(data = c(Produit, Ventes))
print(new_tibble1)
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
new_tibble1 <- new_tibble1 %>%
mutate(data = map(data, ~ mutate(.x, Ventes = .x$Ventes + 10)))
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
produit_C <- c(80, 70)
new_tibble1 <- new_tibble1 %>%
mutate(data = map2(data, produit_C, ~ bind_rows(.x, tibble(Produit = "C", Ventes = .y))))
# Afficher les résultats
new_tibble1
View(new_tibble1)
View(new_tibble1[[2]][[1]])
View(new_tibble1[[2]][[2]])
library(ggplot2)
ggplot(new_tibble1 %>% unnest(data), aes(x = Region, y = Ventes, fill = Produit)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ventes de produits par région", x = "Région", y = "Ventes") +
theme_minimal()
source("C:/Users/lamin/Downloads/wrangling_themes_nlp.R", echo=TRUE)
